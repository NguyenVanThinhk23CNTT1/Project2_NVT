@model IEnumerable<Project2_Nhom5.Areas.Guest.Models.BookingHistoryViewModel>
@{
    ViewData["Title"] = "Lịch Sử Đặt Vé";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        :root { --primary-color: #ff6b35; --secondary-color: #1a1a2e; --accent-color: #16213e; --text-primary: #333; --text-secondary: #666; --footer-text: #666; --bg-primary: #ffffff; --bg-secondary: #f8f9fa; --card-bg: #ffffff; --border-color: #e0e0e0; --shadow: 0 4px 20px rgba(0,0,0,0.1); --gradient: linear-gradient(135deg, #ff6b35 0%, #f7931e 100%); }
        [data-theme="dark"] { --text-primary: #ffffff; --text-secondary: #b0b0b0; --footer-text: #b0b0b0; --bg-primary: #0f0f1a; --bg-secondary: #1a1a2e; --card-bg: #16213e; --border-color: #333; --shadow: 0 4px 20px rgba(0,0,0,0.3); }
        [data-theme="dark"] .form-control, [data-theme="dark"] .form-select { background-color: var(--bg-secondary); border-color: var(--border-color); color: var(--text-primary); }
        [data-theme="dark"] .form-control:focus, [data-theme="dark"] .form-select:focus { background-color: var(--card-bg); border-color: var(--primary-color); color: var(--text-primary); box-shadow: 0 0 0 0.2rem rgba(255, 107, 53, 0.25); }
        [data-theme="dark"] .form-control::placeholder { color: var(--text-secondary); }
        [data-theme="dark"] .modal-backdrop { background-color: rgba(0, 0, 0, 0.8); }
        * { transition: all 0.3s ease; }
        .hero-section { background: var(--bg-primary); min-height: 30vh; display: flex; align-items: center; position: relative; overflow: hidden; }
        .hero-title { font-size: 2.5rem; font-weight: bold; margin-bottom: 1rem; background: var(--gradient); -webkit-background-clip: text; background-clip: text; -webkit-text-fill-color: transparent; }
        .hero-subtitle { font-size: 1.1rem; color: var(--text-secondary); margin-bottom: 1.5rem; }
        .booking-card { background: var(--card-bg); border-radius: 15px; overflow: hidden; box-shadow: var(--shadow); border: 1px solid var(--border-color); margin-bottom: 1.5rem; transition: all 0.3s ease; }
        .booking-card:hover { transform: translateY(-3px); box-shadow: 0 10px 30px rgba(0,0,0,0.15); }
        .booking-header { background: var(--gradient); color: white; padding: 1rem; }
        .booking-date { font-size: 0.9rem; opacity: 0.9; }
        .booking-status { display: inline-block; padding: 4px 12px; border-radius: 20px; font-size: 0.8rem; font-weight: 600; margin-top: 0.5rem; }
        .status-dathanhtoan { background: #28a745; color: white; }
        .status-choxuly { background: #ffc107; color: #000; }
        .status-dahuy { background: #dc3545; color: white; }
        .booking-content { padding: 1.5rem; }
        .movie-title { font-size: 1.3rem; font-weight: bold; margin-bottom: 0.5rem; color: var(--text-primary); }
        .booking-info { color: var(--text-secondary); font-size: 0.9rem; margin-bottom: 0.5rem; }
        .booking-amount { font-size: 1.1rem; font-weight: bold; color: var(--primary-color); margin-top: 1rem; }
        .no-bookings { text-align: center; padding: 3rem; color: var(--text-secondary); }
        .filter-section { background: var(--bg-secondary); padding: 1.5rem; border-radius: 15px; margin-bottom: 2rem; }
        .filter-btn { background: var(--gradient); border: none; padding: 8px 20px; border-radius: 20px; color: white; font-weight: 500; margin: 0 5px; }
        .filter-btn:hover { transform: translateY(-2px); box-shadow: 0 5px 15px rgba(255, 107, 53, 0.3); color: white; }
        .filter-btn.active { background: linear-gradient(135deg, #28a745 0%, #20c997 100%); }
        .action-btn:hover { transform: translateY(-2px); box-shadow: 0 8px 25px rgba(0, 123, 255, 0.4); }
        .action-btn:hover[onclick*="printTicket"] { box-shadow: 0 8px 25px rgba(40, 167, 69, 0.4); }
        .reveal { opacity: 0; transform: translateY(30px); transition: all 0.6s ease; }
        .reveal.active { opacity: 1; transform: translateY(0); }
    </style>
}

<!-- Hero Section -->
<section class="hero-section">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <h1 class="hero-title reveal">Lịch Sử Đặt Vé</h1>
                <p class="hero-subtitle reveal">Xem lại tất cả các vé đã đặt</p>
            </div>
            <div class="col-lg-4">
                <div class="text-center">
                    <i class="fas fa-history fa-6x text-primary"></i>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Filter Section -->
<section class="section">
    <div class="container">
        <div class="filter-section reveal">
            <div class="text-center">
                <h4 class="mb-3">Lọc theo trạng thái</h4>
                <button class="filter-btn active" onclick="filterBookings('all')">Tất cả</button>
                <button class="filter-btn" onclick="filterBookings('dathanhtoan')">Đã thanh toán</button>
                <button class="filter-btn" onclick="filterBookings('choxuly')">Chờ xử lý</button>
                <button class="filter-btn" onclick="filterBookings('dahuy')">Đã hủy</button>
            </div>
        </div>

        <!-- Bookings List -->
        @if (Model.Any())
        {
            <div class="row" id="bookingsContainer">
                @foreach (var booking in Model)
                {
                    <div class="col-lg-6 col-md-6 booking-item" data-status="@booking.Status">
                        <div class="booking-card reveal">
                            <div class="booking-header">
                                <div class="booking-date">
                                    <i class="fas fa-calendar me-2"></i>
                                    @booking.BookingDate.ToString("dd/MM/yyyy HH:mm")
                                </div>
                                <span class="booking-status status-@booking.Status">
                                    @(booking.Status == "dathanhtoan" ? "Đã thanh toán" : 
                                      booking.Status == "choxuly" ? "Chờ xử lý" : "Đã hủy")
                                </span>
                            </div>
                            <div class="booking-content">
                                <h4 class="movie-title">@booking.MovieTitle</h4>
                                <p class="booking-info">
                                    <i class="fas fa-building me-2"></i>
                                    @booking.TheaterName
                                </p>
                                <p class="booking-info">
                                    <i class="fas fa-calendar me-2"></i>
                                    @booking.ShowDate.ToString("dd/MM/yyyy")
                                </p>
                                <p class="booking-info">
                                    <i class="fas fa-clock me-2"></i>
                                    @booking.ShowTime.ToString(@"hh\:mm")
                                </p>
                                <p class="booking-info">
                                    <i class="fas fa-chair me-2"></i>
                                    Ghế: @string.Join(", ", booking.SeatCodes)
                                </p>
                                @if (!string.IsNullOrEmpty(booking.PaymentMethod))
                                {
                                    <p class="booking-info">
                                        <i class="fas fa-credit-card me-2"></i>
                                        @booking.PaymentMethod
                                    </p>
                                }
                                <div class="booking-amount">
                                    @booking.TotalAmount.ToString("N0") VNĐ
                                </div>
                                
                                <div class="mt-3 d-flex gap-2">
                                    <button class="btn btn-outline-primary btn-sm action-btn" onclick="viewTicketDetails(@booking.TicketId)" style="background: linear-gradient(135deg, #007bff 0%, #0056b3 100%); border: none; color: white; font-weight: 600; padding: 8px 16px; border-radius: 20px; transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);">
                                        <i class="fas fa-eye me-2"></i>Xem Chi Tiết
                                    </button>
                                    @if (booking.Status == "dathanhtoan")
                                    {
                                        <button class="btn btn-outline-success btn-sm action-btn" onclick="printTicket(@booking.TicketId)" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%); border: none; color: white; font-weight: 600; padding: 8px 16px; border-radius: 20px; transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);">
                                            <i class="fas fa-print me-2"></i>In Vé
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="no-bookings reveal">
                <i class="fas fa-ticket-alt fa-4x mb-3 text-muted"></i>
                <h4>Chưa có vé nào</h4>
                <p>Bạn chưa đặt vé nào. Hãy khám phá các bộ phim và đặt vé ngay!</p>
                <a href="@Url.Action("Index", "Home")" class="btn btn-primary">
                    <i class="fas fa-film me-2"></i>Xem Phim
                </a>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script>
        // theme toggle with persistence
        (function(){
            const body = document.body; const icon = document.getElementById('theme-icon'); const btn = document.getElementById('themeToggleBtn');
            const saved = localStorage.getItem('theme');
            if(saved === 'dark'){ body.setAttribute('data-theme','dark'); if(icon) icon.className='fas fa-sun'; }
            else if(saved === 'light'){ body.removeAttribute('data-theme'); if(icon) icon.className='fas fa-moon'; }
            else if(saved === 'light'){ body.removeAttribute('data-theme'); if(icon) icon.className='fas fa-moon'; }
            if(btn){ btn.addEventListener('click', function(){ const dark = body.getAttribute('data-theme') === 'dark'; if(dark){ body.removeAttribute('data-theme'); localStorage.setItem('theme','light'); if(icon) icon.className='fas fa-moon'; } else { body.setAttribute('data-theme','dark'); localStorage.setItem('theme','dark'); if(icon) icon.className='fas fa-sun'; } }); }
        })();

        // Filter bookings
        function filterBookings(status) {
            const bookingItems = document.querySelectorAll('.booking-item');
            const filterBtns = document.querySelectorAll('.filter-btn');
            
            // Update active button
            filterBtns.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            // Filter bookings
            bookingItems.forEach(item => {
                if (status === 'all' || item.dataset.status === status) {
                    item.style.display = 'block';
                    item.classList.add('active');
                } else {
                    item.style.display = 'none';
                    item.classList.remove('active');
                }
            });
        }

        // View ticket details
        function viewTicketDetails(ticketId) {
            // Redirect to confirmation page to view details
            window.location.href = `@Url.Action("Confirmation", "Booking")?ticketId=${ticketId}`;
        }

        // Print ticket
        function printTicket(ticketId) {
            // This would typically open a print dialog with ticket details
            Swal.fire({
                icon: 'info',
                title: 'In Vé',
                text: 'Tính năng in vé sẽ được thêm vào phiên bản sau',
                confirmButtonText: 'Đóng',
                confirmButtonColor: '#17a2b8'
            });
        }
        
        // reveal animation
        function revealOnScroll(){ const els=document.querySelectorAll('.reveal'); els.forEach(el=>{ const wh=window.innerHeight; const top=el.getBoundingClientRect().top; if(top<wh-150){ el.classList.add('active'); } }); }
        window.addEventListener('scroll', revealOnScroll); 
        window.addEventListener('load', function() {
            revealOnScroll();
        });
    </script>
} 